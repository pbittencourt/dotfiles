" ------------------------ "
" VIM CONFIG
" Pedro P. Bittencourt
" github.com/pbittencourt
" ------------------------ "

set nocompatible
filetype off

" ------------------------------------------------------------------ "
" VUNDLE SECTION BEGIN
" ------------------------------------------------------------------ "

" Check OS
if has('win32')
    " convert / to \
    set shellslash 

    " Set the runtime path to include Vundle and initialize
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin('~/vimfiles/bundle')

    " Let Vundle manage Vundle, required
    Plugin 'VundleVim/Vundle.vim'
else
    " Set the runtime path to include Vundle and initialize
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()

    " Let Vundle manage Vundle, required
    Plugin 'gmarik/Vundle.vim'
endif

" Add all your plugins here

Plugin 'vim-scripts/indentpython.vim'
"Plugin 'vim-syntastic/syntastic'
Plugin 'lervag/vimtex'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
"Plugin 'vim-pandoc/vim-pandoc'
"Plugin 'vim-pandoc/vim-pandoc-syntax' 
Plugin 'lilydjwg/colorizer'
"Plugin 'christoomey/vim-system-copy'
Plugin 'preservim/nerdtree'
Plugin 'jalvesaq/Nvim-R'
Plugin 'junegunn/goyo.vim'
Plugin 'iamcco/markdown-preview.nvim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" ------------------------------------------------------------------ "
" VUNDLE SECTION END
" ------------------------------------------------------------------ "

"-- EXTERNAL CONFIGS  --
" Autoclose quotes and stuff
source ~/.vim/config/autoclose.vim
" Configure LaTeX for vim
source ~/.vim/config/vimtex.vim
" Recorded macros
source ~/.vim/config/macros.vim

" Turn on syntax highlighting.
syntax on
syntax enable

" Disable the default Vim startup message.
set shortmess+=I

" Show line numbers.
set number
set relativenumber

" Always show the status line at the bottom, 
" even if you only have one window open.
set laststatus=2

" Vim 81th+ column layout concerns
" if (exists('+colorcolumn'))
"     set colorcolumn=80
"     highlight ColorColumn ctermbg=1
" endif
" highlight OverLength ctermbg=1 ctermfg=red
" match OverLength /\%81v.\+/

" The backspace key has slightly unintuitive behavior by default. For example,
" by default, you can't backspace before the insertion point set with 'i'.
" This configuration makes backspace behave more reasonably, in that you can
" backspace over anything.
set backspace=indent,eol,start

" By default, Vim doesn't let you hide a buffer (i.e. have a buffer that isn't
" shown in any window) that has unsaved changes. This is to prevent you from 
" forgetting about unsaved changes and then quitting e.g. via `:qa!`. We find
" hidden buffers helpful enough to disable this protection. See `:help hidden`
" for more information on this.
set hidden

" This setting makes search case-insensitive when all characters in the string
" being searched are lowercase. However, the search becomes case-sensitive if
" it contains any capital letters. This makes searching more convenient.
set ignorecase
set smartcase

" Indentation
set expandtab
set shiftwidth=4
set tabstop=4
set smartindent
set autoindent

" Enable searching as you type, rather than waiting till you press enter.
set incsearch

" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**
set wildmenu

" Unbind some useless/annoying default key bindings.
"nmap Q <Nop> " 'Q' in normal mode enters Ex mode. You almost never want this.

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=

" Enable mouse support
set mouse+=a

" Try to prevent bad habits like using the arrow keys for movement
" Do this in normal mode...
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Don't break words
set wrap linebreak

" Specifying different areas of the screen where the splits should occur
set splitbelow
set splitright

" Split navigations
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" UTF-8 support
set encoding=utf-8

" run python scripts
autocmd FileType python map <buffer> <F9> :w<CR>:exec '!python3' shellescape(@%, 1)<CR>
autocmd FileType python imap <buffer> <F9> <esc>:w<CR>:exec '!python3' shellescape(@%, 1)<CR>

" remap copy/paste commands
nnoremap <C-y> "+y
vnoremap <C-y> "+y
nnoremap <C-p> "+gP
vnoremap <C-p> "+gP

" use ç instead of ^
nnoremap ç ^
vnoremap ç ^

" match bracket colors
hi MatchParen cterm=bold ctermbg=none ctermfg=green

" change fold colors
hi Folded ctermbg=none ctermfg=green

" UltiSnips personal data
let g:snips_author = 'Pedro Pompermayer Bittencourt'
let g:snips_email = 'contato@pedrobittencourt.com.br'
let g:snips_github = 'https://github.com/pbittencourt'

set conceallevel=2

" QUERAIV A DA CAETEC
"syntax match [Group] [regex]{ms=int,me=int} conceal cchar=[single char]
syntax match Normal '\v<[[:alpha:]_]+[^_[:digit:]]*0>'ms=e conceal cchar=₀
